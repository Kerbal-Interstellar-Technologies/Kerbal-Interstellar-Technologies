CONTRACT_GROUP
{
    	name = KspiZZZRadioTelescope
    	minVersion = 1.5.0
    	maxSimultaneous = 1
	agent = #autoLOC_501645 // #autoLOC_501645 = Integrated Integrals

	CONTRACT_GROUP
	{
		// Name of the contract group
		name = KspiKerbinOrbitalTelescope

    		// Name that is displayed in the settings window (if not supplied,
    		// defaulted to the name).
    		displayName = #LOC_KSPIE_CONTRACT_GROUP_KerbinOrbitalTelescope_displayName // #LOC_KSPIE_CONTRACT_GROUP_KerbinOrbitalTelescope_displayName = Kerbin Orbital Telescope

		// Use this to specify the minimum version of Contract Configurator
		// That is required to run contracts in this group.
		minVersion = 1.5.0
		// The maximum number of times that contracts within this contract
		// group can be completed (0 being unlimited).
		// Default = 0
		maxCompletions = 0
		// The maximum instances of this contract within this contract group
		// that can be active at one time (0 being unlimited).
		// Default = 0
		maxSimultaneous = 1
	}
	CONTRACT_GROUP
	{
		// Name of the contract group
		name = KspiMunOrbitalTelescope

    		// Name that is displayed in the settings window (if not supplied,
    		// defaulted to the name).
    		displayName = #LOC_KSPIE_CONTRACT_GROUP_MunOrbitalTelescope_displayName // #LOC_KSPIE_CONTRACT_GROUP_MunOrbitalTelescope_displayName = Mun Orbital Telescope

		// Use this to specify the minimum version of Contract Configurator
		// That is required to run contracts in this group.
		minVersion = 1.5.0
		// The maximum number of times that contracts within this contract
		// group can be completed (0 being unlimited).
		// Default = 0
		maxCompletions = 0
		// The maximum instances of this contract within this contract group
		// that can be active at one time (0 being unlimited).
		// Default = 0
		maxSimultaneous = 1
	}
}


// #######################################################################################
// #######################################################################################
// #######################################################################################


CONTRACT_TYPE
{
    	name = KerbinOrbitalTelescopeDeployment
    	group = KspiKerbinOrbitalTelescope
    	title = #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_title // #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_title = Launch a Radio Telescope Observatory into Kerbin Orbit
   	    description = #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_description // #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_description = Our scientists are eager to explore the universe with an orbital radio telescope and research facility in orbit around Kerbin.
    	synopsis = #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_synopsis // #LOC_KSPIE_CONTRACT_TYPE_KerbinOrbitalTelescopeDeployment_synopsis = Launch a radio telescope to Kerbin orbit.
    	completedMessage = #LOC_KSPIE_CONTRACT_TYPE_OrbitalTelescopeDeployment_completedMessage // #LOC_KSPIE_CONTRACT_TYPE_OrbitalTelescopeDeployment_completedMessage = Telescope Complete!
    
	// Contract min/max expiry in days.
    	minExpiry = 1
    	maxExpiry = 30
    
	// Contract deadline in days. Random.
    	deadline = Random(500, 1000)
    	// Contract can be cancelled and declined.
    	cancellable = true
    	declinable = true
    	// Target Kerbin
    	targetBody = Kerbin

    	// Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
    	rewardScience = 20
    	rewardReputation = Random(1.0, 100.0)
    	rewardFunds = Random(300000.0, 750000.0)
    	failureReputation = Random(1.0, 100.0)
    	failureFunds = 50000.0
    	advanceFunds = 50000.0

    	// The weight is used in the contract generation process.  Each contract type that is available to be offered is added to a weighted list.
    	// Contract types with a higher value are more likely to be chosen.
    	// Note that the weight is applied per contract group.
   	weight = 1.0

    	// Failsafe Data.
    	DATA
    	{
        	type = Vessel
        	requiredValue = false
        	targetVessel = [ KerbinTelescope ].Random()
    	}
    	DATA
    	{
        	type = CelestialBody
        	requiredValue = true
        	targetBody = [Kerbin ].Random()
    	}

    	//Define the new research facility
    	PARAMETER
    	{
        	name = NewTelescope
        	type = VesselParameterGroup
        	hideChildren = true
        	title = #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_title // #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_title = Launch a new Triple-Z Radio Astronomy Telescope into LKO
        	notes = #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_notes // #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_notes = The research facility must include the Triple-Z Telescope, 1 Docking Port, a science lab and an energy source.  This can be done in one launch, or multiple launches.
        
		//defines the LKO Station.
        	define = KerbinTelescope

        	PARAMETER
        	{
            		name = LKO
            		type = Orbit
            		hideChildren = true
            		
			//Reach Low Kerbin Orbit.
            		targetBody = Kerbin
            		situation = ORBITING
            		maxAltitude = 249000
        	}

        	//Check for a Docking Port
      		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
		}
		// Check for Telescope
      		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = deployablePhasedArray
			minCount = 1
		}

        	PARAMETER
        	{
            		name = RTGSolar
			// The Any parameter is completed if any one of its child parameters are completed
            		type = Any
            		title = #LOC_KSPIE_CONTRACT_TYPE_RTGSolar_title // #LOC_KSPIE_CONTRACT_TYPE_RTGSolar_title = Have one of the following power generators

            		PARAMETER
            		{
                		name = PartValidationSolar 
                		type = PartValidation
                		hideChildren = true
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationSolar_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationSolar_title = 1 or more solar panels
                		// PartModule(s) to check for.  Optional, and can be specified multiple times.
                		partModule = ModuleDeployableSolarPanel
                		// Minimum count, default = 1
                		minCount = 1
            		}
                
            		PARAMETER
            		{
                		name = PartValidationRTG
                		type = PartValidation
                		hideChildren = true
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationRTG_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationRTG_title = 1 or more generators
                		// PartModule(s) to check for.  Optional, and can be specified multiple times. Looking for an RTG
                		partModule = ModuleGenerator
                		// Minimum count, default = 1
                		minCount = 1
            		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationFissionReactor
	            		type = PartModuleUnlocked
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationFissionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationFissionReactor_title = 1 or more Solid Fuel Fission Reactors
	            		partModule = InterstellarFissionReactor
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationMoltenSaltReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationMoltenSaltReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationMoltenSaltReactor_title = 1 or more Molten Salt Reactors
	            		partModule = InterstellarMoltenSaltReactor
				        part = SmallFNGeneratorMk1
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationPebbleBedFissionReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationPebbleBedFissionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationPebbleBedFissionReactor_title = 1 or more Pebble Bed Fission Reactors
	            		partModule = InterstellarPebbleBedFissionReactor
				        part = SmallFNGeneratorMk1
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInterstellarTokamakFusionReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInterstellarTokamakFusionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInterstellarTokamakFusionReactor_title = 1 or more Magnetic Confinement Fusion Reactors combined with any Electric Power Generator
				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InterstellarTokamakFusionReactor

    				// The name of the part to check for.  If multiple are specified, will
    				// match on ANY of the parts listed.
				part = SmallFNGeneratorMk1
				part = LargeFNGeneratorMk1
				part = MHDGenerator
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactor_title = 1 or more Inertial Confinement Fusion Reactors with Any Electric Power Generator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor

    				// The name of the part to check for.  If multiple are specified, will
    				// match on ANY of the parts listed.
				part = SmallFNGeneratorMk1
				part = LargeFNGeneratorMk1
				part = MHDGenerator
	    		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactorWithIntegratedCharged
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedCharged_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedCharged_title = 1 or more Inertial Confinement Fusion Reactors with Integrated Charged Particles PowerGenerator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor
				partModule = IntegratedChargedParticlesPowerGenerator
	    		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactorWithIntegratedThermal
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedThermal_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedThermal_title = 1 or more Inertial Confinement Fusion Reactors with Integrated Thermal PowerGenerator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor
				partModule = IntegratedThermalElectricPowerGenerator
	    		}

            		REQUIREMENT:NEEDS[Kopernicus]
	    		{
	            		name = PartValidationKopernicus
	            		type = PartModuleUnlocked
	            		partModule = KopernicusSolarPanel
	    		}
			
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNearFutureSolar
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureSolar_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureSolar_title = 1 or more curved solar panels
				hideChildren = true
				partModule = ModuleCurvedSolarPanel
				minCount = 1
			}
		
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNearFutureReactors
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureReactors_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureReactors_title = 1 or more fission reactors
				hideChildren = true
				partModule = FissionReactor
				minCount = 1
			}

			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNearFutureRTGs
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureRTGs_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureRTGs_title = 1 or more radioisotope generators
				hideChildren = true
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
			}
        	}

        	PARAMETER:NEEDS[!StationScience]
        	{
            		name = ScienceLab
            		type = PartValidation
            		title = #LOC_KSPIE_CONTRACT_TYPE_ScienceLab_title // #LOC_KSPIE_CONTRACT_TYPE_ScienceLab_title = Have a Science Lab on board
            		hideChildren = true

            		// The name of the part to check for. Optional.
            		partModule = ModuleScienceLab
        	}

        	PARAMETER:NEEDS[StationScience]
        	{
            		name = StationScienceSupport
            		type = Any
            		title = #LOC_KSPIE_CONTRACT_TYPE_StationScienceSupport_title // #LOC_KSPIE_CONTRACT_TYPE_StationScienceSupport_title = Have any type of Science Lab on board

            		PARAMETER
            		{
                		name = PartValidation
                		type = PartValidation
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidation1_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidation_title = 1 or more standard science labs
                		hideChildren = true

                		// The name of the part to check for. Optional.
                		partModule = ModuleScienceLab
            		}
            		PARAMETER
            		{
                		name = PartValidation
                		type = PartValidation
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidation2_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidation2_title = 1 or more Station Science Labs
                		hideChildren = true

                		// The name of the part to check for. Optional.
                		partModule = StationScienceModule
            		}
        	}
    	}

	REQUIREMENT
	{
	    name = PartUnlocked
	    type = PartUnlocked
	    part = deployablePhasedArray
	}
	
	REQUIREMENT
	{
		name = Any
		type = Any
		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleDeployableSolarPanel
		}
        	REQUIREMENT:NEEDS[Kopernicus]
        	{
            		name = PartValidationKopernicus
            		type = PartModuleUnlocked
            		partModule = KopernicusSolarPanel
        	}
		REQUIREMENT:NEEDS[NearFutureSolar]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleCurvedSolarPanel
		}	
	}

	//check if any Science Lab is unlocked	
	REQUIREMENT
	{
		name = Any
		type = Any
	
		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleScienceLab
		}
		REQUIREMENT:NEEDS[StationScience]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = StationScienceModule
		}
	}

    	// Make sure we've reached Orbit
    	REQUIREMENT
    	{
        	name = Orbit
        	type = Orbit
        	// Target celestial body.  Defaults to the targetBody of the contract.
        	targetBody = Kerbin
    	}
}


// #######################################################################################
// #######################################################################################
// #######################################################################################


CONTRACT_TYPE
{
    	name = MunOrbitalTelescopeDeployment
    	group = KspiMunOrbitalTelescope
    	title = #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_title // #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_title = Launch a Radio Telescope Observatory to Mun Orbit
    	description = #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_description // #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_description = Our scientists are very happy with the Kerbin orbital radio telescope. A second telescope in Mun Orbit will allow them to see even further into deep space.
    	synopsis = #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_synopsis // #LOC_KSPIE_CONTRACT_TYPE_MunOrbitalTelescopeDeployment_synopsis = Launch a radio telescope to Mun orbit!
    	completedMessage = #LOC_KSPIE_CONTRACT_TYPE_OrbitalTelescopeDeployment_completedMessage // #LOC_KSPIE_CONTRACT_TYPE_OrbitalTelescopeDeployment_completedMessage = Telescope Complete!

    	// Contract min/max expiry in days.
    	minExpiry = 1
    	maxExpiry = 30

    	// Contract deadline in days. Random.
    	deadline = Random(750, 1000)

    	// Contract can be cancelled and declined.
    	cancellable = true
    	declinable = true
    	targetBody = Mun

    	// Contract rewards - large science and random other rewards.
    	rewardScience = 250
    	rewardReputation = Random(1.0, 200.0)
    	rewardFunds = Random(500000.0, 1500000.0)
    	failureReputation = Random(1.0, 100.0)
    	failureFunds = 150000.0
    	advanceFunds = 150000.0

    	// The weight is used in the contract generation process.  Each contract type that is available to be offered is added to a weighted list.
    	// Contract types with a higher value are more likely to be chosen.
    	// Note that the weight is applied per contract group.
   	weight = 1.0

    	// Failsafe Data.
    	DATA
    	{
        	type = Vessel
        	requiredValue = false
        	targetVessel = [ MunTelescope ].Random()
    	}

    	//Define the new research facility
    	PARAMETER
    	{
        	name = NewTelescope
        	type = VesselParameterGroup
        	hideChildren = true
        	title = #LOC_KSPIE_CONTRACT_TYPE_NewTelescope2_title // #LOC_KSPIE_CONTRACT_TYPE_NewTelescope2_title = Launch a new Triple-Z Radio Astronomy Telescope into Mun Orbit
        	notes = #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_notes // #LOC_KSPIE_CONTRACT_TYPE_NewTelescope_notes = The research facility must include the Triple-Z Telescope, 1 Docking Port, a science lab and an energy source.  This can be done in one launch, or multiple launches.
        	
		//defines the LKO Station.
        	define = MunTelescope

        	PARAMETER
        	{
            		name = Mun
            		type = Orbit
            		hideChildren = true
            		//Reach Low Mun Orbit.
            		targetBody = Mun
            		situation = ORBITING
            		maxAltitude = 249000
        	}

        	//Check for a Docking Port
      		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
		}
		//Check for PHased Array
      		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = deployablePhasedArray
			minCount = 1
		}
       		PARAMETER
        	{
            		name = RTGSolar
            		type = Any
            		title = #LOC_KSPIE_CONTRACT_TYPE_RTGSolar_title // #LOC_KSPIE_CONTRACT_TYPE_RTGSolar_title = Have one of the following power generators
            
			PARAMETER
            		{
                		name = PartValidationSolar
                		type = PartValidation
                		hideChildren = true
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationSolar_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationSolar_title = 1 or more solar panels
                		// PartModule(s) to check for.  Optional, and can be specified multiple times.
                		partModule = ModuleDeployableSolarPanel
                		// Minimum count, default = 1
                		minCount = 1
            		}
                
            		PARAMETER
            		{
                		name = PartValidationRTG 
                		type = PartValidation
                		hideChildren = true
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationRTG_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationRTG_title = 1 or more generators
                		// PartModule(s) to check for.  Optional, and can be specified multiple times. Looking for an RTG
                		partModule = ModuleGenerator
                		// Minimum count, default = 1
                		minCount = 1
            		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationFissionReactor
	            		type = PartModuleUnlocked
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationFissionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationFissionReactor_title = 1 or more Solid Fuel Fission Reactors
	            		partModule = InterstellarFissionReactor
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationMoltenSaltReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationMoltenSaltReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationMoltenSaltReactor_title = 1 or more Molten Salt Reactors
	            		partModule = InterstellarMoltenSaltReactor
				        part = SmallFNGeneratorMk1
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationPebbleBedFissionReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationPebbleBedFissionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationPebbleBedFissionReactor_title = 1 or more Pebble Bed Fission Reactors
	            		partModule = InterstellarPebbleBedFissionReactor
				        part = SmallFNGeneratorMk1
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInterstellarTokamakFusionReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInterstellarTokamakFusionReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInterstellarTokamakFusionReactor_title = 1 or more Magnetic Confinement Fusion Reactors combined with any Electric Power Generator
    
				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InterstellarTokamakFusionReactor

    				// The name of the part to check for.  If multiple are specified, will
    				// match on ANY of the parts listed.
				part = SmallFNGeneratorMk1
				part = LargeFNGeneratorMk1
				part = MHDGenerator
	    		}
            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactor
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactor_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactor_title = 1 or more Inertial Confinement Fusion Reactors with Any Electric Power Generator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor

    				// The name of the part to check for.  If multiple are specified, will
    				// match on ANY of the parts listed.
				part = SmallFNGeneratorMk1
				part = LargeFNGeneratorMk1
				part = MHDGenerator
	    		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactorWithIntegratedCharged
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedCharged_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedCharged_title = 1 or more Inertial Confinement Fusion Reactors with Integrated Charged Particles PowerGenerator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor
				partModule = IntegratedChargedParticlesPowerGenerator
	    		}

            		REQUIREMENT:NEEDS[WarpPlugin]
	    		{
	            		name = PartValidationInertialConfinementReactorWithIntegratedThermal
	            		type = PartModuleUnlocked
				        hideChildren = true
				        title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedThermal_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationInertialConfinementReactorWithIntegratedThermal_title = 1 or more Inertial Confinement Fusion Reactors with Integrated Thermal PowerGenerator

				// PartModule(s) to check for.  If multiple are specified, requires that
    				// the given parts have ALL the partModules listed.
	            		partModule = InertialConfinementReactor
				partModule = IntegratedThermalElectricPowerGenerator
	    		}

            		REQUIREMENT:NEEDS[Kopernicus]
	        	{
	            		name = PartValidationKopernicus
	            		type = PartModuleUnlocked
	            		partModule = KopernicusSolarPanel
	        	}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNearFutureSolar
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureSolar_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureSolar_title = 1 or more curved solar panels
				hideChildren = true
				partModule = ModuleCurvedSolarPanel
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNearFutureReactors
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureReactors_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureReactors_title = 1 or more fission reactors
				hideChildren = true
				partModule = FissionReactor
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNearFutureRTGs
				type = PartValidation
				title = #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureRTGs_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidationNearFutureRTGs_title = 1 or more radioisotope generators
				hideChildren = true
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
			}
        	}

        	PARAMETER:NEEDS[!StationScience]
        	{
            		name = ScienceLab
            		type = PartValidation
            		title = #LOC_KSPIE_CONTRACT_TYPE_ScienceLab_title // #LOC_KSPIE_CONTRACT_TYPE_ScienceLab_title = Have a Science Lab on board
            		hideChildren = true
            		// The name of the part to check for. Optional.
            		partModule = ModuleScienceLab
        	}

        	PARAMETER:NEEDS[StationScience]
        	{
            		name = StationScienceSupport
            		type = Any
            		title = #LOC_KSPIE_CONTRACT_TYPE_StationScienceSupport_title // #LOC_KSPIE_CONTRACT_TYPE_StationScienceSupport_title = Have any type of Science Lab on board

            		PARAMETER
            		{
                		name = PartValidation
                		type = PartValidation
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidation1_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidation1_title = 1 or more standard science labs
                		hideChildren = true
                		// The name of the part to check for. Optional.
                		partModule = ModuleScienceLab
            		}
            		PARAMETER
            		{
                		name = PartValidation
                		type = PartValidation
                		title = #LOC_KSPIE_CONTRACT_TYPE_PartValidation2_title // #LOC_KSPIE_CONTRACT_TYPE_PartValidation2_title = 1 or more Station Science Labs
                		hideChildren = true
                		// The name of the part to check for. Optional.
                		partModule = StationScienceModule
            		}
        	}
    	}

	REQUIREMENT
	{
	    name = PartUnlocked
	    type = PartUnlocked
	    part = deployablePhasedArray
	}
	
	REQUIREMENT
	{
		name = Any
		type = Any
		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleDeployableSolarPanel
		}
        	REQUIREMENT:NEEDS[Kopernicus]
        	{
            		name = PartValidationKopernicus
            		type = PartModuleUnlocked
            		partModule = KopernicusSolarPanel
        	}
		REQUIREMENT:NEEDS[NearFutureSolar]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleCurvedSolarPanel
		}	
	}

	//check a Science Lab is unlocked	
	REQUIREMENT
	{
		name = Any
		type = Any
	
		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = ModuleScienceLab
		}
		REQUIREMENT:NEEDS[StationScience]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = StationScienceModule
		}
	}

    	// Make sure we've reached Orbit
    	REQUIREMENT
    	{
        	name = Orbit
        	type = Orbit
        	// Target celestial body.  Defaults to the targetBody of the contract.
        	targetBody = Mun
    	}
    	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = KerbinOrbitalTelescopeDeployment
		minCount = 1
	}
}
