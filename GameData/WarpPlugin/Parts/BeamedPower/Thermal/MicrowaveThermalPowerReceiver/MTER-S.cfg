PART
{
name = microwaveThermalEnergyReceiverS
module = Part
author = Conti

//mesh = MTER-M.mu
MODEL
{
	model = WarpPlugin/Parts/BeamedPower/Thermal/MicrowaveThermalPowerReceiver/MTER-M
	scale = 1,1,1
}

scale = 1
rescaleFactor = 1

node_stack_top = 0.0, 1.25, 0.0, 0.0, 1.0, 0.0, 2
node_stack_bottom = 0.0, -1.25, 0.0, 0.0, -1.0, 0.0, 2

// --- editor parameters ---
entryCost = 4000
cost = 2000
TechRequired = advSolarTech
category = Communication
subcategory = 0
title = #LOC_KSPIE_microwaveThermalEnergyReceiverS_title		// #LOC_KSPIE_microwaveThermalEnergyReceiverS_title = Inline Thermal Receiver Mk1
manufacturer = #LOC_KSPIE_microwaveThermalEnergyReceiverS_manuf		// #LOC_KSPIE_microwaveThermalEnergyReceiverS_manuf = Continuum Interplanetary
description = #LOC_KSPIE_microwaveThermalEnergyReceiverS_descr		// #LOC_KSPIE_microwaveThermalEnergyReceiverS_descr = The Inline Thermal Receiver supplies thermal energy from received beamed power to thermal engines or thermal electric generators. This part must be attached directly to an engine or generator of a compatible diameter. Receival is optimal from the sized and minimal from above or underneath.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---

mass = 2
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
breakingForce = 200
breakingTorque = 200
maxTemp = 2800


	RESOURCE
	{
		name = ThermalPower
		amount = 0
		maxAmount = 4000
	}

	RESOURCE
	{
		name = WasteHeat
		amount = 0
		maxAmount = 4000
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 0
		maxAmount = 250
	}

	MODULE
	{
		name = MicrowavePowerReceiver

		canSwitchBandwidthInEditor = false
		canSwitchBandwidthInFlight = false

		isThermalReceiver = true
		isEnergyReceiver = false

		maximumElectricPower = 4000
		maximumThermalPower = 4000

		thermalMode = true
		thermalProcessingModifier = 0.5
		receiverType = 1
		animTName = mterGlow
		canLinkup = false
		diameter = 2.5 
		radius = 2.5

		facingThreshold = 0
		facingSurfaceExponent = 0.5
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = all bandwidths
		minimumWavelength = 0.000000000001	// 1.0e-12 = 0.001 nm
		maximumWavelength = 1  			// 1.0e-0
		electricEfficiencyPercentage0 = 30
		thermalEfficiencyPercentage0 = 99
		techRequirement0 = start
	}

	MODULE
	{
		name = TweakScale
		type = stack_interstellar
		defaultScale = 2.5
		scaleFactors = 1.25, 1.875, 2.5, 3.75, 5.0, 7.5, 10, 15, 20, 30, 40
	}
}
