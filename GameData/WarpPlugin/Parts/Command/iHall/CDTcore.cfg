// KSPI-E
// iHAL

PART
{
	// General parameters
	name = CDTcore
	module = Part
	author = Eleusis La Arwall // artist

	// Asset parameters
	MODEL
	{
		model = WarpPlugin/Parts/Command/iHall/modelCDTcore
	}
//	mesh = model
	scale = 1
	rescaleFactor = 1

	// Node definitions - Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.2, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.2, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 1.28, 0.0, 0.0, 1.0, 0.0, 0.0, 1
//	CoMOffset = 0.0, -0.47, 0.0

	// Editor parameters
	TechRequired = artificialIntelligence
	entryCost = 5000
	cost = 5000
	category = Pods
	subcategory = 0
	title = #LOC_KSPIE_iHAL_title		// #LOC_KSPIE_iHAL_title = iHAL
	manufacturer = #LOC_KSPIE_iHAL_manuf	// #LOC_KSPIE_iHAL_manuf = Floating Energies Incorporated
	description = #LOC_KSPIE_iHAL_descr	// #LOC_KSPIE_iHAL_descr = Probe core equipped with a supercomputer, capacitor, small generator and reaction wheel.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// Standard part parameters
	mass = 0.66
	fuelCrossFeed = True
	vesselType = Probe

	// Drag
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	// Damage and Temperature
	crashTolerance = 12
	maxTemp = 2000

	RESOURCE
	{
		name = ElectricCharge
		amount = 250
		maxAmount = 250
	}

	RESOURCE
	{
		name = Megajoules
		amount = 40
		maxAmount = 40
	}

	MODULE
	{
		name = TweakScale
		type = stack
		freeScale = false
		defaultScale = 2.5
		scaleFactors = 0.625, 1.25, 1.875, 2.5, 3.75, 5.0, 7.5, 10, 15, 20, 30, 40
	}

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = iHALidle
		actionAvailable = true
		actionGUIName = Poke iHAL
//		defaultActionGroup =
		startEventGUIName = Poke iHAL
		endEventGUIName = Poke iHAL
		eventAvailableEditor = true
		eventAvailableEVA = true
		eventAvailableFlight = true
		evaDistance = 5
	}

	MODULE
	{
		name = ModuleProbeControlPoint
		minimumCrew = 1
		multiHop = False
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.05
		}
		hasHibernation = True
		hibernationMultiplier = 0.1
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 18.0
		requiredResource = ElectricCharge
		antennaPower = 50000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}

	MODULE
	{
		name = ModuleScienceContainer
		reviewActionName = #autoLOC_502201	//#autoLOC_502201 = Review Stored Data
		storeActionName = #autoLOC_502202	//#autoLOC_502202 = Store Experiments
		evaOnlyStorage = True // i.e. can nearby regular vessels also do this, or EVA only
		storageRange = 1.3
		canBeTransferredToInVessel = True
		canTransferInVessel = True
	}

	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 25
		YawTorque = 25
		RollTorque = 25
		torqueResponseSpeed = 25
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.5
		}
	}

	MODULE
	{
		name = ModuleSAS
		SASServiceLevel = 3
	}

	MODULE
	{
		name = InterstellarResourceConverter
		primaryResourceNames = Megajoules
		secondaryResourceNames = ElectricCharge
		maxPowerPrimary = 300
		maxPowerSecondary = 3
		primaryConversionEnergyCost = 1 
		secondaryConversionEnergyCost = 1 
		primaryConversionCostPower = false
		secondaryConversionCostPower = false
	}

	MODULE
	{
		name = KspiSuperCapacitator
		maxStorageCapacityMJ = 40
		partMass = 0.66
	}

	MODULE:NEEDS[WarpPlugin]
	{
		name = ComputerCore
		baseScienceRate = 0.5
		originalName = Standard Mainframe Core
		megajouleRate = 0.5
		upgradeTechReq = artificialIntelligence
		upgradedName = AGI Core
		upgradeCost = 100
		upgradedMegajouleRate = 5
		upgradeTechReq = none
		experimentID = ExpKSPIComputerCore
		rerunnable = true
		deployEventName = Collect Data
		reviewEventName = Review Data
		resetEventName = Reset Data
	}

	MODULE
	{
		name		=	ModuleElementRadioactiveDecay
		decayConstant 	=	1.0e-6
		resourceName	=	Megajoules
		decayProduct	=	WasteHeat
		convFactor	=	1
	}

	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 0.1
		}
	}

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 350			//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1			//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0		//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.01		//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.01		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0		//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0		//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 0		//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000		//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 2000			//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 0				//Maximum amount of radiator capacity we can consume - 2500 = 1 small
		PassiveEnergy
		{
			key = 0 	25000
			key = 200 	10000
			key = 250 	50		
			key = 300	25
			key = 350	0
		}
	}

	MODULE:NEEDS[ConnectedLivingSpace]
	{
		name = ModuleConnectedLivingSpace
		passable = true
	}
}