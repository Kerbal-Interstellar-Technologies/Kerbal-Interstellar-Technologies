PART
{
	name = KspiGascoreEngine
	module = Part
	author = TiktaalikDreaming
	mesh = NewModel.mu
	scale = 1
	rescaleFactor = 0.5

	node_stack_top = 0.0, 10.2557, 0.0, 0.0, 1.0, 0.0, 5
	
	//node_attach_top = 0.0, 3.75, 0.0, 0.0, 1.0, 0.0, 5
	//node_stack_bottom = 0.0, -11.8, 0.0, 0.0, -1.0, 0.0

	fx_exhaustFlame_blue = 0.0, -125.6, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, -1.6, 0.0, 0.0, 0.0, 1.0, running
	fx_smokeTrail_light = 0.0, -0.6, 0.0, 0.0, 1.0, 0.0, running

	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout

	TechRequired = exoticNuclearPropulsion
	entryCost = 300000
	cost = 300000
	category = Engine
	subcategory = 0
	title = Open Cycle Gas Core Rocket
	manufacturer = Konvair division of Kerbal Dynamics

	description = Nuclear gas-core-reactor rockets can provide much higher specific impulse than solid core nuclear rockets because their temperature limitations are in the nozzle and core wall structural temperatures, which are distanced from the hottest regions of the gas core. Consequently, nuclear gas core reactors can provide much higher temperatures to the propellant. Solid core nuclear thermal rockets can develop higher specific impulse than conventional chemical rockets due to the extreme power density of the reactor core, but their operating temperatures are limited by the maximum temperature of the solid core because the reactor's temperatures cannot rise above its components' lowest melting temperature.  Due to the much higher temperatures achievable by the gaseous core design, it can deliver higher specific impulse and thrust than most other conventional nuclear designs.  In this design, Open Cycle, Spherical Counter Flow Toroidal, the fissile fuel is kept mostly in a base injection stabilized recirculation bubble by hydrodynamic confinement.  Leakage is roughly 0.25-1% by weight of fuel to propellant.  Also, partially ionized plasma from the gas core is used to generate electricity magnetohydrodynamically, subsequently negating the need for an additional power supply.
	
	attachRules = 1,0,1,1,0
	mass = 16
	heatConductivity = 0.04 
	emissiveConstant = 0.83 // engine nozzles are good at radiating, NTRs even better
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 2500			
	bulkheadProfiles = size3
	explosionPotential = 40

	MODULE
	{
		name = ModuleEnginesFX

		propellant1 = LqdHydrogen
		ratio1 = 1

		EngineType = Nuclear
		thrustVectorTransformName = Thrust
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 5091
		heatProduction = 830
		fxOffset = 0, 0, 0		
		useEngineResponseTime = True
		engineAccelerationSpeed = 0.8
		engineDecelerationSpeed = 0.8

		PROPELLANT
		{
			name = LiquidFuel
			ratio = 1.0
			DrawGauge = True
		}

		atmosphereCurve
		{
			key = 0 1964
			key = 1 1296
			key = 2 900
		}
	}

	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = Gimballed
		gimbalRange = 2.0
	}

	RESOURCE
	{
		name = ThermalPower
		amount = 0
		maxAmount = 3000
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = Megajoules
		amount = 0
		maxAmount = 10
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = WasteHeat
		amount = 0
		maxAmount = 200000
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 800
		maxAmount = 800
		isTweakable = true
		hideFlow = true
	}

	RESOURCE
	{
		name = UF4
		amount = 10
		maxAmount = 10
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.7
		maxDistance = 250
		falloff = 2.5
		thrustTransformName = Thrust
	}

	MODULE
	{
		name = InterstellarFissionNTR

		upgradeTechReqMk2 = heatManagementSystems
		upgradeTechReqMk3 = advHeatManagement
		upgradeTechReqMk4 = specializedRadiators
		upgradeTechReqMk5 = exoticRadiators

		basePowerOutputMk1 = 1638
		basePowerOutputMk2 = 2048
		basePowerOutputMk3 = 2560
		basePowerOutputMk4 = 3200
		basePowerOutputMk5 = 4000

		coreTemperatureMk1 = 11852
		coreTemperatureMk2 = 17777
		coreTemperatureMk3 = 26666
		coreTemperatureMk4 = 40000
		coreTemperatureMk5 = 60000

		supportMHD = false
		radius = 2.5
		partMass = 16
		minimumThrottle = 0.01
		consumeGlobal = false
		reactorType = 16
		fuelEfficiency = 0.88
		upgradedFuelEfficiency = 0.88
		bonusBufferFactor = 1		

		heatTransportationEfficiency = 0.8
		hotBathTemperature = 3200

		thermalPropulsionEfficiency = 0			// cannot use thermal propulsion
		plasmaPropulsionEfficiency = 1			// can use plasma nozzle
		chargedParticlePropulsionEfficiency = 0		// cannot use magnetic nozzle

		thermalEnergyEfficiency = 1			// can use thermal power generator
		plasmaEnergyEfficiency = 0			// cannot use MHD generator		
		chargedParticleEnergyEfficiency = 0		// cannot use direct power generator

		neutronEmbrittlementLifepointsMax = 100
		supportedPropellantAtoms = 471
		supportedPropellantTypes = 35
		hasBuoyancyEffects = true
		geeForceTreshHold = 0.5
		geeForceMultiplier = 2
		minGeeForceModifier = 0.001
		alternatorPowerKW = 60

		electricPowerPriority = 1 // determines power production priority for connected generator
	}

	MODULE
	{
		name = ThermalElectricEffectGenerator
		calculatedMass = false
		isLimitedByMinThrotle = true
		chargedParticleMode = false

		efficiencyMk1 = 0.03
		efficiencyMk2 = 0.05
		efficiencyMk3 = 0.07

		Mk2TechReq = specializedElectrics
		Mk3TechReq = experimentalElectrics

		upgradeCost = 220
		radius = 2.5
	}

	MODULE
	{
		name = ThermalNozzleController

		delayedThrottleFactor = 0
		isPlasmaNozzle = true
		isJet = false
		radius = 2.5
		exitArea = 3
		partMass = 16 

		sootHeatDivider = 50
		sootThrustDivider = 150

		delayedThrottleFactor = 0.5

		heatProductionMult = 0.3

		emisiveConstantMult = 3
		emisiveConstantExp = 0.6

		maxTemp = 2750

		showPartTemperature = false
		powerTrustMultiplier = 1
		powerTrustMultiplierJet = 1
		limitedByMaxThermalNozzleIsp = false
	}

	MODULE
	{
		name = TweakScale
		type = stack_interstellar
		defaultScale = 2.5
		scaleFactors = 2.5, 3.75, 5, 7.5, 10, 15, 20, 30, 40
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator
			rotatorsName = ActuatorPiston
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston
			rotatorsName = GasActuator
		}
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_001
			rotatorsName = ActuatorPiston_001
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_001
			rotatorsName = GasActuator_001
		}
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_002
			rotatorsName = ActuatorPiston_002
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_002
			rotatorsName = GasActuator_002
		}
	}	

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_003
			rotatorsName = ActuatorPiston_003
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_003
			rotatorsName = GasActuator_003
		}
	}

}

