PART
{
	name = KspiGascoreEngine
	module = Part
	author = TiktaalikDreaming
	mesh = NewModel.mu
	scale = 1
	rescaleFactor = 0.5

	node_stack_top = 0.0, 10.2557, 0.0, 0.0, 1.0, 0.0, 5
	
	//node_attach_top = 0.0, 3.75, 0.0, 0.0, 1.0, 0.0, 5
	//node_stack_bottom = 0.0, -11.8, 0.0, 0.0, -1.0, 0.0

	fx_exhaustFlame_blue = 0.0, -125.6, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, -1.6, 0.0, 0.0, 0.0, 1.0, running
	fx_smokeTrail_light = 0.0, -0.6, 0.0, 0.0, 1.0, 0.0, running

	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout

	TechRequired = hidden
	TechHidden = True
	entryCost = 300000
	cost = 300000
	category = Engine
	subcategory = 0
	title = Open Cycle Gas Core Rocket
	manufacturer = Konvair division of Kerbal Dynamics

	description = Nuclear gas-core-reactor rockets can provide much higher specific impulse than solid core nuclear rockets because their temperature limitations are in the nozzle and core wall structural temperatures, which are distanced from the hottest regions of the gas core. Consequently, nuclear gas core reactors can provide much higher temperatures to the propellant. Solid core nuclear thermal rockets can develop higher specific impulse than conventional chemical rockets due to the extreme power density of the reactor core, but their operating temperatures are limited by the maximum temperature of the solid core because the reactor's temperatures cannot rise above its components' lowest melting temperature.  Due to the much higher temperatures achievable by the gaseous core design, it can deliver higher specific impulse and thrust than most other conventional nuclear designs.  In this design, Open Cycle, Spherical Counter Flow Toroidal, the fissile fuel is kept mostly in a base injection stabilized recirculation bubble by hydrodynamic confinement.  Leakage is roughly 0.25-1% by weight of fuel to propellant.  Also, partially ionized plasma from the gas core is used to generate electricity magnetohydrodynamically, subsequently negating the need for an additional power supply.
	
	attachRules = 1,0,1,1,0
	mass = 16
	heatConductivity = 0.04 
	emissiveConstant = 0.83 // engine nozzles are good at radiating, NTRs even better
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 3200			
	bulkheadProfiles = size3
	explosionPotential = 40

	EFFECTS
	{
		engage
		{
			AUDIO
			{
			  channel = Ship
			  clip = sound_vent_medium
			  volume = 1.0
			  pitch = 2.0
			  loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = T_T
				oneShot = true
			}
			AUDIO
			{
			  channel = Ship
			  clip = sound_explosion_low
			  volume = 1.0
			  pitch = 2.0
			  loop = false
			}
		}
		plasma-nozzle-plume
		{
			AUDIO
			{
				  channel = Ship
				  clip = sound_rocket_hard
				  volume = 0.0 0.0
				  volume = 1.0 1.0
				  pitch = 0.0 0.2
				  pitch = 1.0 1.0
				  loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = WarpPlugin/FX/plasma-nozzle-plume
				transformName = Thrust
				emission = 0.0 0.0
				emission = 0.01 0.1
				emission = 0.075 0.25
				emission = 1.0 1.0
				speed = 0.0 0.35
				speed = 1.0 1.0
				localOffset = 0, 0, 2
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = WarpPlugin/FX/plasma-nozzle-core
				transformName = Thrust
				emission = 0.0 0.0
				emission = 0.01 0.1
				emission = 0.075 0.25
				emission = 1.0 1.0
				speed = 0.0 0.35
				speed = 1.0 1.0
				localOffset = 0, 0, 2
			}
		}
	}

	MODULE
	{
		name = ModuleEnginesWarp

		propellant1 = LqdHydrogen
		ratio1 = 1

		EngineType = Nuclear
		thrustVectorTransformName = Thrust
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 5091
		heatProduction = 830
		fxOffset = 0, 0, 2		
		useEngineResponseTime = True
		engineAccelerationSpeed = 0.8
		engineDecelerationSpeed = 0.8

		PROPELLANT
		{
			name = LiquidFuel
			ratio = 1.0
			DrawGauge = True
		}

		atmosphereCurve
		{
			key = 0 5000
			key = 1 100
			key = 2 50
		}
	}

	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = Gimballed
		gimbalRange = 2.0
	}

	RESOURCE
	{
		name = ThermalPower
		amount = 0
		maxAmount = 3000
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = Megajoules
		amount = 0
		maxAmount = 10
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = WasteHeat
		amount = 0
		maxAmount = 200000
		isTweakable = false
		hideFlow = false
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 800
		maxAmount = 800
		isTweakable = true
		hideFlow = true
	}

	RESOURCE
	{
		name = UF4
		amount = 10
		maxAmount = 10
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.7
		maxDistance = 250
		falloff = 2.5
		thrustTransformName = Thrust
	}

	MODULE
	{
		name = InterstellarFissionNTR

		upgradeTechReqMk2 = expNuclearPower
		upgradeTechReqMk3 = specializedRadiators 
		upgradeTechReqMk4 = exoticRadiators 
		upgradeTechReqMk5 = exoticNuclearPower

		basePowerOutputMk1 = 1000
		basePowerOutputMk2 = 1414
		basePowerOutputMk3 = 2000
		basePowerOutputMk4 = 2828
		basePowerOutputMk5 = 4000

		minimumThrottleMk1 = 0.0005
		minimumThrottleMk2 = 0.0004
		minimumThrottleMk3 = 0.00032
		minimumThrottleMk4 = 0.00025
		minimumThrottleMk5 = 0.0002

		coreTemperatureMk1 = 12960
		coreTemperatureMk2 = 21600
		coreTemperatureMk3 = 36000
		coreTemperatureMk4 = 60000 
		coreTemperatureMk5 = 100000

		IspTempMultOffset = -0.2357269918213

		supportMHD = false
		radius = 2.5
		partMass = 16
		minimumThrottle = 0.01
		consumeGlobal = false
		reactorType = 16

		reactorSpeedMult = 0.25 			// modifies the engines acceleration time
		bonusBufferFactor = 1
		fuelEfficiency = 0.5
		upgradedFuelEfficiency = 0.5
		temperatureThrotleExponent = 1

		heatTransportationEfficiency = 0.8
		hotBathTemperature = 3200

		engineHeatProductionMult = 3 			// tripple thermal engine heat production

		thermalPropulsionEfficiency = 0			// cannot use thermal propulsion
		plasmaPropulsionEfficiency = 1			// can use plasma nozzle
		chargedParticlePropulsionEfficiency = 0		// cannot use magnetic nozzle

		thermalEnergyEfficiency = 1			// can use thermal power generator
		plasmaEnergyEfficiency = 0			// cannot use MHD generator		
		chargedParticleEnergyEfficiency = 0		// cannot use direct power generator

		neutronEmbrittlementLifepointsMax = 100
		supportedPropellantAtoms = 471
		supportedPropellantTypes = 35

		hasBuoyancyEffects = true
		geeForceTreshHold = 0.25
		geeForceMultiplier = 2
		geeForceExponent = 2
		minGeeForceModifier = 0.01

		hasOverheatEffects = true
		overheatTreshHold = 0.25
		overheatMultiplier = 2
		overheatExponent = 2
		minOverheatModifier = 0.01

		electricPowerPriority = 1 // determines power production priority for connected generator
	}

	MODULE
	{
		name = ThermalElectricEffectGenerator

		calculatedMass = false
		isLimitedByMinThrotle = true
		chargedParticleMode = false
		showDetailedInfo = false

		efficiencyMk1 = 0.03
		efficiencyMk2 = 0.05
		efficiencyMk3 = 0.07

		Mk2TechReq = specializedElectrics
		Mk3TechReq = experimentalElectrics

		upgradeCost = 220
		radius = 2.5
	}

	MODULE
	{
		name = ThermalNozzleController

		requiredMegajouleRatio = 0			// Does not require electric Power
		isPlasmaNozzle = false
		canUsePlasmaPower = true

		maxThermalNozzleIsp = 7000
		IspTempMultOffset = -0.2357269918213

		isJet = false
		radius = 2.5
		exitArea = 3
		partMass = 16
		maxTemp = 3200

		sootHeatDivider = 50
		sootThrustDivider = 150

		delayedThrottleFactor = 0.5
		heatProductionMult = 0.3

		emisiveConstantMult = 3
		emisiveConstantExp = 0.6

		showPartTemperature = true
		limitedByMaxThermalNozzleIsp = false

		powerTrustMultiplier = 1
		powerTrustMultiplierJet = 1		

		EffectNameLithium = plasma-nozzle-plume
		EffectNameNonLFO = plasma-nozzle-plume
	}

	MODULE
	{
		name = TweakScale
		type = stack_interstellar
		defaultScale = 2.5
		scaleFactors = 2.5, 3.75, 5, 7.5, 10, 15, 20, 30, 40
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator
			rotatorsName = ActuatorPiston
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston
			rotatorsName = GasActuator
		}
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_001
			rotatorsName = ActuatorPiston_001
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_001
			rotatorsName = GasActuator_001
		}
	}

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_002
			rotatorsName = ActuatorPiston_002
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_002
			rotatorsName = GasActuator_002
		}
	}	

	MODULE	
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = GasActuator_003
			rotatorsName = ActuatorPiston_003
		}
		CONSTRAINLOOKFX
		{
			targetName = ActuatorPiston_003
			rotatorsName = GasActuator_003
		}
	}

}

