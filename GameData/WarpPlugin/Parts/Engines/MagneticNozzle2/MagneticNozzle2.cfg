PART
{
name = KspiMagneticNozzle
module = Part
author = Trolllception

MODEL
{
    model = WarpPlugin/Parts/Engines/MagneticNozzle2/model
    rotation = 0,0,0
    texture = magnozzle_fairing , Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_fairing_diff
    texture = maznozzle_fairing_N_NRM , Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_fairing_norm
    scale = 1.0,1.0,1.0
}

rescaleFactor = 2.5

node_stack_top = 0.0, 0.07, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -2.24, 0.0, 0.0, -1.0, 0.0

fx_exhaustFlame_blue = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, running
fx_exhaustSparks_flameout = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, flameout

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

TechRequired = plasmaPropulsion
entryCost = 14000
cost = 55154
category = Engine
subcategory = 0
title = #LOC_KSPIE_KspiMagneticNozzle_title		// #LOC_KSPIE_KspiMagneticNozzle_title = Plasma Nozzle
manufacturer = #LOC_KSPIE_KspiMagneticNozzle_manuf	// #LOC_KSPIE_KspiMagneticNozzle_manuf = Ionic Protonic Electronics
description = #LOC_KSPIE_KspiMagneticNozzle_descr	// #LOC_KSPIE_KspiMagneticNozzle_descr = The plasma nozzle is an advanced alternative to the thermal rocket which can expel high temperature charged exhaust at extremely high velocities because the propellant is confined electromagnetically instead of physically.  It does require electric power and, of of course, only operates when paired with reactors that generate charged particles. Not rated for atmospheric use.
attachRules = 1,0,1,0,0

// --- standard part parameters ---
mass = 4
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
breakingForce = 200
breakingTorque = 200
maxTemp = 2000

DRAG_CUBE
{
	cube = Fairing, 3.638,0.7884,0.5996, 3.638,0.7884,0.5996, 1.215,0.9705,0.1112, 1.215,1,0.09883, 3.706,0.7694,0.6875, 3.706,0.7693,0.6875, 5.96E-08,-1.376,1.192E-07, 1.256,2.95,1.237
	cube = Clean, 2.108,0.7607,0.7153, 2.108,0.7597,0.7209, 1.198,0.9702,0.0974, 1.198,0.6171,2.837, 2.111,0.753,0.7115, 2.111,0.759,0.7115, 0,-1.354,-3.576E-07, 1.248,2.905,1.229
}


MODULE
{
	name = ModuleEnginesWarp
	resourceDeltaV = LqdHydrogen

	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 500
	heatProduction = 10
	fxOffset = 0, 0, 0.3
	PROPELLANT
	{
		name = LqdHydrogen
		ratio = 1
		DrawGauge = True
	}
	atmosphereCurve
	{
		key = 0 1000
		key = 1 400
	}
}

MODULE
{
	name = ThermalNozzleController
	originalName = #LOC_KSPIE_KspiMagneticNozzle_ThermalNozzleController_origi	// #LOC_KSPIE_KspiMagneticNozzle_ThermalNozzleController_origi = Plasma Nozzle
	
	upgradeTechReq = advEMSystems
	delayedThrottleFactor = 0

	isPlasmaNozzle = true
	isJet = false
	radius = 2.5
	exitArea = 3
	partMass = 2 

	sootHeatDivider = 50
	sootThrustDivider = 150	

	heatProductionMult = 0.005
	heatProductionExponent = 7

	emisiveConstantMult = 3
	emisiveConstantExp = 0.6

	maxTemp = 2750
	showPartTemperature = false

	powerTrustMultiplier = 1
	powerTrustMultiplierJet = 1

//	EffectNameLithium = lithiumFlame
//	EffectNameNonLFO = hydrogenFlame

	limitedByMaxThermalNozzleIsp = false
}
	

RESOURCE
{
	name = WasteHeat
	amount = 0
	maxAmount = 50000
}

MODULE
{
	name = ModuleGimbal
	gimbalTransformName = thrustTransform
	gimbalRange = 1
}

MODULE
{
	name = TweakScale
	type = surface
	defaultScale = 2.5
	scaleFactors =  0.625, 0.875, 1.25, 1.875, 2.5, 3.75, 5, 7.5, 10, 15, 20, 30, 40
}

MODULE
{
	name = ModuleJettison
	jettisonName = engine_fairing  //separate mesh that appears when something is attached to the node set in the next variable; the mesh detaches when the lower part is staged
	bottomNodeName = bottom      //a part attached to this node will make the fairing mesh visible. must be a stack node
	isFairing = True             //affects Drag when the fairing is on.
	jettisonedObjectMass = 0.1     // mass of the jettisoned mesh as debris 
	jettisonForce = 5            // impulse on the fairing mesh when jettisoned
	jettisonDirection = 0 0 1     //in XYZ format; +Z is same direction as engine thrust, or some other direction you set.
}
}
