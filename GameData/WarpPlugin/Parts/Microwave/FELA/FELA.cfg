// KSPI-E
// FELA Free Electron Laser Array

PART
{
	// General parameters
	name = FELA
	module = Part
	author = Eleusis La Arwall

	// Asset parameters
	mesh = model.mu
	scale = 1
	rescaleFactor = 1

	// Node definitions - Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_bottom = 0.0, -5.4, 0.0, 0.0, -1.0, 0.0, 3

	// Editor parameters
	TechRequired = microwavePowerTransmission
	entryCost = 40000
	cost = 40000
	category = Communication
	subcategory = 0
	title = Multi Bandwidth Dish Transceiver (Large)
	manufacturer = Radiant Future Enterprises
	description = THe FELA is a multifunctional multi bandwidth transmiter and receiver. The FELA is compatible with any Beam Power Generator. In order to be able to beam power, it needs to be directly connected to a beam generator.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,0,0,0

	// Standard part parameters
	mass = 32
	fuelCrossFeed = True

	// Drag
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	// Damage and Temperature
	crashTolerance = 7
	maxTemp = 1800
	thermalMassModifier = 2
	emissiveConstant = 0.01 // Dielectric

	// Modules

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = FELARotateAnim
		startEventGUIName = Test rotation
		endEventGUIName = Revert rotation
		actionGUIName = Toggle rotation
		instantAnimInEditor = false
		animSpeed = 0.001
		layer = 1
	}

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = FELAPivotAnim
		startEventGUIName = Test pivot
		endEventGUIName = Revert pivot
		actionGUIName = Toggle pivot
		instantAnimInEditor = false
		animSpeed = 0.001
		layer = 2
	}

	MODULE
	{
		name = MicrowavePowerReceiverDish

		canSwitchBandwidthInEditor = true
		canSwitchBandwidthInFlight = true

		isEnergyReceiver = true
		isThermalReceiver = false

		maximumElectricPower = 40000
		maximumThermalPower = 40000

		diameter = 20
		receiverType = 2
		facingThreshold = 0
		facingThreshold = 0.1
		canLinkup = true
		canRelay = true
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = extreme ultraviolet
		minimumWavelength = 0.00000001  // 1.0e-8	
		targetWavelength  = 0.000000013	// 1.3e-8
		maximumWavelength = 0.0000001  // 1.0e-7
		electricEfficiencyPercentage0 = 30
		techRequirement0 = ultraHighEnergyPhysics
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = ultraviolet
		minimumWavelength = 0.0000001  // 1.0e-7
		targetWavelength  = 0.0000002		
		maximumWavelength = 0.00000035 // 3.5e-7
		electricEfficiencyPercentage0 = 45
		techRequirement0 = experimentalElectricalSystems
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = visible light
		minimumWavelength = 0.00000035  // 1.0e-7
		targetWavelength  = 0.0000005		
		maximumWavelength = 0.00000075  // 7.5e-5
		electricEfficiencyPercentage0 = 60
		techRequirement0 = highPowerElectricalSystems
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = infrared
		minimumWavelength = 0.00000075  // 7.5e-5
		targetWavelength  = 0.000011 	// 1.1e-5		
		maximumWavelength = 0.001       // 1.0e-3
		electricEfficiencyPercentage0 = 75
		techRequirement0 = highTechElectricalSystems
	}

	MODULE
	{
		name = BandwidthConverter
		bandwidthName = microwave
		minimumWavelength = 0.001  // 1.0e-3
		targetWavelength  = 0.0085 // 8.5e-3		
		maximumWavelength = 1      // 1.0e+0	
		electricEfficiencyPercentage0 = 90
		techRequirement0 = start
	}

	MODULE
	{
   		name = MicrowavePowerTransmitter
		maximumPower = 50000
		apertureDiameter = 20
		compatibleBeamTypes = 7	
		electricEfficiencyPercentage0 = 0.0000007
		nativeAtmosphericAbsorptionPercentage = 50

		canTransmit = true
		buildInRelay = false
		forceActivateAtStartup = true
		canFunctionOnSurface = true
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = RELAY
		packetInterval = 0.1
		packetSize = 1
		packetResourceCost = 200
		requiredResource = ElectricCharge
		DeployFxModules = 0
		antennaPower = 50000000000000 // 5.0e+13
		antennaCombinable = True
	}

	MODULE
	{
		name = TweakScale
		type = stack_interstellar_225
		defaultScale = 2.5
		scaleFactors = 2.5, 3.75, 5, 7.5, 10, 15, 20
		scaleNames = 2.5m, 3.75m, 5m, 7.5m, 10m, 15m, 20m
	}

	// Resources
	RESOURCE
	{
		name = Megajoules
		amount = 0
		maxAmount = 200
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 0
		maxAmount = 2000
	}

	RESOURCE
	{
		name = WasteHeat
		amount = 0
		maxAmount = 2000
	}

}